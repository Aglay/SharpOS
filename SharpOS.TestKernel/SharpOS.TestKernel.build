<?xml version="1.0"?>

<!--
        *  (C) 2007 Johann MacDonagh <johann [at] macdonaghs [dot] com>
        *
        *  Licensed under the terms of the GNU GPL License version 2.
        *
-->

<project name="SharpOS AOT Testing Kernel" default="build">
	<description>Compiles a set of tests for the AOT compiler.</description>
	
	<target name="build">
		<echo message="Building Test Kernel" />
		
		<mkdir dir="../build" />
				
		<script language="C#">
			<code>
				<![CDATA[
					public static void ScriptMain(Project project)
					{
						// Get a copy of the _TestRunnerHeader.il
						File.Copy("TestRunnerHeader.il", "_TestRunner.il", true);
						
						// Open the temporary file
						TextWriter tr = new StreamWriter(File.Open("_TestRunner.il", FileMode.Append));
						tr.WriteLine();
						
						int jump = 0; // Stores current branch label
						
						// Write method calls
						foreach(string fileName in Directory.GetFiles("Tests"))
						{
							StreamReader sReader = File.OpenText(fileName);
							string contents = sReader.ReadToEnd();
							
							string className = Regex.Match(contents, @"(?:\.class[a-zA-Z\s]+?([a-zA-Z_]+)\sextends)").Groups[1].Captures[0].ToString();
							
							foreach(Match m in Regex.Matches(contents, @"(?:\.method[a-zA-Z0-9\s]+?int32\s(CMP[0-9]+)(?:\s)*\(\))"))
							{
								string methodName = m.Groups[1].Captures[0].ToString();
								
								// Write call
								if (jump > 0) tr.WriteLine("_" + (jump - 1) + ":");
								tr.WriteLine("call int32 SharpOS.TestKernel.Tests." + className + "::" + methodName + "()");
								tr.WriteLine("ldc.i4 1");
								tr.WriteLine("ceq");
								tr.WriteLine("brtrue _" + jump);
								tr.WriteLine("ldstr \"" + className + "::" + methodName + " Failed\"");
								tr.WriteLine("call uint8* SharpOS.TestKernel.Kernel::String(string)");
								tr.WriteLine("call void SharpOS.TestKernel.Kernel::WriteMessage(uint8*)");
								tr.WriteLine("br exit");
								
								++jump;
							}
							
							sReader.Close();
						}

						// Write footer
						tr.WriteLine("_" + (jump - 1) + ":");
						tr.WriteLine("OK:");
						tr.WriteLine("ldstr \"Ok\"");
						tr.WriteLine("call uint8* SharpOS.TestKernel.Kernel::String(string)");
						tr.WriteLine("call void SharpOS.TestKernel.Kernel::WriteMessage(uint8*)");
						tr.WriteLine("exit:");
						tr.WriteLine("ret");
						tr.WriteLine("}");
						tr.WriteLine("}");
						tr.WriteLine("}");
						
						tr.Close();
					}
				]]>
			</code>
		</script>
		
		<ilasm target="exe" output="../build/SharpOS.TestKernel.exe">
			<sources>
				<include name="_TestRunner.il" />
				<include name="Boot.il" />
				<include name="Tests/*.il" />
			</sources>
		</ilasm>
	</target>
	
	<target name="clean">
		<delete file="../build/SharpOS.TestKernel.exe" failonerror="false" />
		<delete file="_TestRunner.il" failonerror="false" />
	</target>
</project>
